package main;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.util.List;
import java.util.ResourceBundle;

import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TextArea;
import javafx.stage.DirectoryChooser;
import javafx.stage.FileChooser;
import javafx.stage.FileChooser.ExtensionFilter;
import javafx.stage.Stage;

public class RootController implements Initializable{
	@FXML private ComboBox<String> comboBox;
	@FXML private TextArea textArea;
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		comboBox.getSelectionModel().selectedIndexProperty().addListener((target,o,n)->{
			int index = n.intValue();
			System.out.println("select comboBox : " + index);
			
			switch(index) {
			case 0 :
				// directory chooser
				// javaFX에서 제공하는 폴더 선택 상자
				DirectoryChooser chooser = new DirectoryChooser();
				chooser.setTitle("디렉토리 선택");
				// 오픈 기본 디렉토리 내 PC
				
				// 현재 프로젝트에 src폴더
				// chooser.setInitialDirectory(new File("src"));
				chooser.setInitialDirectory(new File("C:\\Temp"));
				chooser.showDialog(primaryStage);
				// showDialog - directory 선택 완료 시 또는 취소 시 까지 blocking
				// dialog 창은 부모창에 부가적인 정보를 추가하는 창으로 창의 기능이 다하고 나면
				// 소유권을 전달할 부모 창(stage)에 대한 정보가 전달되어야 함.
				File selectedDir = chooser.showDialog(primaryStage);
				System.out.println(selectedDir);
				if(selectedDir != null) {
					System.out.println(selectedDir.isDirectory());
					for(File f : selectedDir.listFiles()) {
						textArea.appendText(f.getName()+"\n");
					}
				}
				break;
			case 1 :
				// file chooser - file 선택 상자
				FileChooser fileChooser = new FileChooser();
				fileChooser.setInitialDirectory(new File("C:\\Temp"));
				fileChooser.setTitle("로드할 문서를 선택해주세요!");
				ObservableList<ExtensionFilter> filters = fileChooser.getExtensionFilters();
				filters.addAll(
						new ExtensionFilter("Text Files", "*.txt", "*.hwp","*.pdf"),
						new ExtensionFilter("Image Filters","*.png","*.jpg",".jpeg","*.gif"),
						new ExtensionFilter("All Files","*.*")
				);
				// 파일을 선택창이 종료되기 전까지 blocking
				// 종료가 되면 소유권을 전달할 스테이지 정보 전달
				// File selectedFile = fileChooser.showOpenDialog(primaryStage);
				
				File selectedFile = fileChooser.showSaveDialog(primaryStage);
				if(selectedFile != null) {
					System.out.println(selectedFile.isFile());
					System.out.println(selectedFile.getAbsolutePath());
				}
				
				// 여러 파일을 선택 할 수 있는 dialog
				List<File> selectedFiles = fileChooser.showOpenMultipleDialog(primaryStage);
				System.out.println(selectedFiles);
				
				break;
				
			case 2 :
				// popup window
				break;
				
			case 3 :
				// custom window
				break;
			}
		});
	}
	
	private Stage primaryStage;
	
	
	public void setStage(Stage primaryStage) {
		this.primaryStage = primaryStage;
	}
	
	public void handleNew() {
		System.out.println("New!");
	}
	
	// fileChooser를 이용하여 선택된 txt 파일의 정보를 읽어
	// textArea에 출력
	
	public void handleOpen() throws IOException {
		System.out.println("Open!");
		textArea.appendText("Open\n");
		// 파일 선택창
		FileChooser fileChooser = new FileChooser();
		fileChooser.getExtensionFilters().add(new ExtensionFilter("Text file", "*.txt"));
		fileChooser.setInitialDirectory(new File("C:\\temp"));
		File selectedFile = fileChooser.showOpenDialog(primaryStage);
		if(selectedFile != null) {
			textArea.appendText(selectedFile.getPath() + "\n");
			FileReader reader = new FileReader(selectedFile);
			BufferedReader bReader = new BufferedReader(reader);
			// 파일 추저로 선택된 txt 파일의 텍스트 내용을
			// textArea에 추가로 작성
			
			String message = null;
			while((message = bReader.readLine()) != null) {
				textArea.appendText(message+"\n");
			}
			bReader.close();
			
		}
		
	}
	
	public void handleSave() {
		System.out.println("Save!");
	}
	
	public void handleClose() {
		System.out.println("Close!");
	}
	
}
